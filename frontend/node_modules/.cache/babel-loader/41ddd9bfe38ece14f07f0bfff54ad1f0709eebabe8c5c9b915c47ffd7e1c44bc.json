{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_5 = {\n  key: 1,\n  style: {\n    \"color\": \"green\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Register\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Username:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.username = $event),\n    id: \"username\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.user.username]]), _ctx.$v.user.username.$error ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"Username is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.email = $event),\n    id: \"email\",\n    type: \"email\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.user.email]]), _ctx.$v.user.email.$error ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"Valid email is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.password = $event),\n    id: \"password\",\n    type: \"password\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.user.password]]), _ctx.$v.user.password.$error ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Password is required.\")) : _createCommentVNode(\"\", true)]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Register\", -1))], 32), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.error), 1)) : _createCommentVNode(\"\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.success), 1)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleRegister","for","$event","$data","user","username","id","required","_ctx","$v","$error","_hoisted_1","_createCommentVNode","email","type","_hoisted_2","password","_hoisted_3","error","_hoisted_4","_toDisplayString","success","_hoisted_5"],"sources":["/home/ubuntu/FastApiProject2/frontend/src/views/RegisterPage.vue"],"sourcesContent":["<!-- src/views/Register.vue -->\n<template>\n  <div>\n    <h2>Register</h2>\n    <form @submit.prevent=\"handleRegister\">\n      <div>\n        <label for=\"username\">Username:</label>\n        <input v-model=\"user.username\" id=\"username\" required />\n        <span v-if=\"$v.user.username.$error\">Username is required.</span>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input v-model=\"user.email\" id=\"email\" type=\"email\" required />\n        <span v-if=\"$v.user.email.$error\">Valid email is required.</span>\n      </div>\n      <div>\n        <label for=\"password\">Password:</label>\n        <input v-model=\"user.password\" id=\"password\" type=\"password\" required />\n        <span v-if=\"$v.user.password.$error\">Password is required.</span>\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n    <p v-if=\"error\" style=\"color:red\">{{ error }}</p>\n    <p v-if=\"success\" style=\"color:green\">{{ success }}</p>\n  </div>\n</template>\n\n<script>\nimport { required, email } from '@vuelidate/validators'\nimport useVuelidate from '@vuelidate/core'\nimport api from '../services/api'\n\nexport default {\n  data() {\n    return {\n      user: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      error: '',\n      success: ''\n    }\n  },\n  validations() {\n    return {\n      user: {\n        username: { required },\n        email: { required, email },\n        password: { required }\n      }\n    }\n  },\n  setup() {\n    return { v$: useVuelidate() }\n  },\n  methods: {\n    async handleRegister() {\n      this.v$.$touch()\n      if (this.v$.$invalid) {\n        this.error = 'Please fill out the form correctly.'\n        this.success = ''\n        return\n      }\n      try {\n        await api.post('/users/', this.user)\n        this.success = 'Registration successful. You can now login.'\n        this.error = ''\n        this.user = { username: '', email: '', password: '' }\n      } catch (err) {\n        this.error = err.response?.data?.detail || 'Registration failed.'\n        this.success = ''\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\nspan {\n  color: red;\n  font-size: 0.8em;\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAsBoBC,KAAiB,EAAjB;IAAA;EAAA;;;EAtBpBD,GAAA;EAuBsBC,KAAmB,EAAnB;IAAA;EAAA;;;uBArBpBC,mBAAA,CAsBM,c,0BArBJC,mBAAA,CAAiB,YAAb,UAAQ,QACZA,mBAAA,CAiBO;IAjBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACnCJ,mBAAA,CAIM,c,0BAHJA,mBAAA,CAAuC;IAAhCO,GAAG,EAAC;EAAU,GAAC,WAAS,Q,gBAC/BP,mBAAA,CAAwD;IAPhE,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAOwBC,KAAA,CAAAC,IAAI,CAACC,QAAQ,GAAAH,MAAA;IAAEI,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;gCAA7BJ,KAAA,CAAAC,IAAI,CAACC,QAAQ,E,GACjBG,IAAA,CAAAC,EAAE,CAACL,IAAI,CAACC,QAAQ,CAACK,MAAM,I,cAAnCjB,mBAAA,CAAiE,QARzEkB,UAAA,EAQ6C,uBAAqB,KARlEC,mBAAA,W,GAUMlB,mBAAA,CAIM,c,0BAHJA,mBAAA,CAAiC;IAA1BO,GAAG,EAAC;EAAO,GAAC,QAAM,Q,gBACzBP,mBAAA,CAA+D;IAZvE,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAYwBC,KAAA,CAAAC,IAAI,CAACS,KAAK,GAAAX,MAAA;IAAEI,EAAE,EAAC,OAAO;IAACQ,IAAI,EAAC,OAAO;IAACP,QAAQ,EAAR;gCAApCJ,KAAA,CAAAC,IAAI,CAACS,KAAK,E,GACdL,IAAA,CAAAC,EAAE,CAACL,IAAI,CAACS,KAAK,CAACH,MAAM,I,cAAhCjB,mBAAA,CAAiE,QAbzEsB,UAAA,EAa0C,0BAAwB,KAblEH,mBAAA,W,GAeMlB,mBAAA,CAIM,c,0BAHJA,mBAAA,CAAuC;IAAhCO,GAAG,EAAC;EAAU,GAAC,WAAS,Q,gBAC/BP,mBAAA,CAAwE;IAjBhF,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAiBwBC,KAAA,CAAAC,IAAI,CAACY,QAAQ,GAAAd,MAAA;IAAEI,EAAE,EAAC,UAAU;IAACQ,IAAI,EAAC,UAAU;IAACP,QAAQ,EAAR;gCAA7CJ,KAAA,CAAAC,IAAI,CAACY,QAAQ,E,GACjBR,IAAA,CAAAC,EAAE,CAACL,IAAI,CAACY,QAAQ,CAACN,MAAM,I,cAAnCjB,mBAAA,CAAiE,QAlBzEwB,UAAA,EAkB6C,uBAAqB,KAlBlEL,mBAAA,W,6BAoBMlB,mBAAA,CAAuC;IAA/BoB,IAAI,EAAC;EAAQ,GAAC,UAAQ,O,OAEvBX,KAAA,CAAAe,KAAK,I,cAAdzB,mBAAA,CAAiD,KAAjD0B,UAAiD,EAAAC,gBAAA,CAAZjB,KAAA,CAAAe,KAAK,SAtB9CN,mBAAA,YAuBaT,KAAA,CAAAkB,OAAO,I,cAAhB5B,mBAAA,CAAuD,KAAvD6B,UAAuD,EAAAF,gBAAA,CAAdjB,KAAA,CAAAkB,OAAO,SAvBpDT,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}